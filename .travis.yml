language: cpp
env:
  global:
    - QT5_INSTALL_PREFIX="/usr/local/qt5-static"

matrix:
  include:
    ################################################
    # linux release build: gcc 9.1.0 on ubuntu 16.04
    ################################################
    - os: linux
      dist: xenial
      compiler: gcc
      env:
        - DEPLOY_FILE="spatial-model-editor"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - libxkbcommon-dev
            - jwm
      services: xvfb
      install:
        # force qt to use desired compiler version
        - sudo rm /usr/bin/gcc
        - sudo rm /usr/bin/g++
        - sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc
        - sudo ln -s /usr/bin/g++-9 /usr/bin/g++
        - gcc --version
        - g++ --version
        # start a window manager so the Qt GUI tests can have their focus set
        - "jwm &"
        - sleep 1
      script:
        # compile and run unit tests
        - mkdir build-tests
        - cd build-tests
        - qmake -Wall -config release ../test.pro
        - make -j2
        - ./test -d=yes
        - cd ../
        # compile release executable
        - mkdir build
        - cd build
        - qmake -Wall -config release ../spatial-model-editor.pro
        - make -j2
        # check dependencies of resulting executable
        - ldd spatial-model-editor
    ######################################################
    # osx release build: xcode 9.4.1 [9F2000], macOS 10.13
    ######################################################
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env:
        - DEPLOY_FILE="spatial-model-editor.dmg"
      script:
        # compile and run unit tests
        - mkdir build-tests
        - cd build-tests
        - qmake -Wall -config release ../test.pro
        - make -j2
        - ./test.app/Contents/MacOS/test -d=yes
        - cd ../
        # compile release executable
        - mkdir build
        - cd build
        - qmake -Wall -config release ../spatial-model-editor.pro
        - make -j2
        # check dependencies of resulting executable
        - otool -L spatial-model-editor.app/Contents/MacOS/spatial-model-editor
        # package app dir as a .dmg
        - hdiutil create spatial-model-editor -fs HFS+ -srcfolder spatial-model-editor.app
    #####################################################
    # linux code quality build: sonarcloud.io, codecov.io
    #####################################################
    - os: linux
      dist: xenial
      compiler: gcc
      env:
        - secure: "Muu56AqHMCZOpCG2d5Byeh6P++9xXKl7otulxdhZCfA1/yTAJM9M67B1ZHo7czEvLKdoVzqCz6aFMnsVvFHUHQDmAtmth/WzdfXZ7OTG7puDIeWRmYqQacpLeF6h9ws3sUr5Bjz9m0guhjbKN/6VIqoyuWLH/J0MwzJN5JKgWitQBeJ15GWjNJN20FLgiYW0vWtQ71dncM6VaLAyH6V/T8jLRNacmCjApAOsS2FuhnSfbL+rY5nRVXPtoy/muwRgpl2Bez8OV6z5nDCaBLxXLgNkC7Y/0OhfzY/t+6wZ4nuDZDJ/4Hn4AyycH1O1ldmfEjw9nHBdqG/0JW2NmvSLojp5NiCUSI1MDmcgqKv6VKdVV2cdn6b7s6YY/8p08pnm+uExHYRkiXPFNeYfoQF3ruYSzFOQXRA+VI3Rg0dMfs4cO+PXCWS/hIAHudG3vaDgOwOnLFaOPjJKGYidmbmu6u4jdvBNFuCkooSYmnO2JCe0LIGgJAwlOEfG51WYD9bewCx+w+NmB+Cow3E4G0DCHomz1XGUhp1DsmjGarU1kDf4PtFLQgLC88h7AQfJtg15mSV6xDcKV+nmuDNS+ifTpQTTSe/w6LqqzcE/EOLaVAtCSe4ACOORW2yBF7DPgUY47ZSkU4iwA7pAOAYDKs37fNHjK8s/TJhM++RZ+21oMME="
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - libxkbcommon-dev
            - jwm
        sonarcloud:
          organization: "lkeegan-github"
      services: xvfb
      install:
        # force qt to use desired compiler version
        - sudo rm /usr/bin/gcc
        - sudo rm /usr/bin/g++
        - sudo rm /usr/bin/gcov
        - sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc
        - sudo ln -s /usr/bin/g++-9 /usr/bin/g++
        - sudo ln -s /usr/bin/gcov-9 /usr/bin/gcov
        - gcc --version
        - g++ --version
        - gcov --version
        # start a window manager so the Qt GUI tests can have their focus set
        - "jwm &"
        - sleep 1
      script:
        # get blame info for sonar-scanner
        - git fetch --unshallow
        # compile debug version of executable
        - mkdir build
        - cd build
        - qmake -Wall -config debug ../spatial-model-editor.pro
        # wrap make call with sonar-source build wrapper
        - build-wrapper-linux-x86-64 --out-dir ../bw-output make -j2
        - cd ../
        # compile and run unit tests
        - mkdir build-tests
        - cd build-tests
        - qmake -Wall -config debug ../test.pro
        - make -j2
        - ./test -d=yes
        # generate gcov test coverage data for sonar-source & codecov.io
        - mkdir ../gcov
        - cd ../gcov
        - gcov -r -p ../build-tests/*.gcno
        # only want coverage data for src and inc folders
        - mkdir tmp
        - mv *.* tmp
        - cd tmp
        - mv ^#inc* ../
        - mv ^#src* ../
        - rm *
        - cd ../
        - rmdir tmp
        - ls
        - cd ../
        # upload to sonar-scanner
        - sonar-scanner -Dsonar.login=$SONAR_LOGIN
      after_script:
        # upload coverage report to codecov.io
        - bash <(curl -s https://codecov.io/bash) -X gcov -f "gcov/*"
    ##############################################
    # linux test build: valgrind for non-gui tests
    ##############################################
    - os: linux
      dist: bionic
      compiler: gcc
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-9
            - libxkbcommon-dev
            - valgrind
      services: xvfb
      install:
        # force qt to use desired compiler version
        - sudo rm /usr/bin/gcc
        - sudo rm /usr/bin/g++
        - sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc
        - sudo ln -s /usr/bin/g++-9 /usr/bin/g++
        - gcc --version
        - g++ --version
        - valgrind --version
      script:
        # compile and run non-gui unit tests with valgrind
        - mkdir build-tests
        - cd build-tests
        - qmake -Wall -config debug ../test.pro
        - make -j2
        - valgrind --leak-check=full ./test -d=yes "[non-gui]"

before_script:
  # install pre-compiled Qt5 binaries & static libraries to $QT5_INSTALL_PREFIX
  # note absolute paths currently hard coded in QT binaries
  # to override this, add a qt.conf file (https://doc.qt.io/qt-5/qt-conf.html#overriding-paths)
  - wget "https://github.com/lkeegan/qt5-static/releases/latest/download/qt5-static-$TRAVIS_OS_NAME.tgz"
  - sudo tar xzvf qt5-static-$TRAVIS_OS_NAME.tgz -C /
  # export path for Qt5 binaries
  - export PATH=$QT5_INSTALL_PREFIX/bin:$PATH
  - qmake -v
  # build qcustomplot library
  - cd ext/qcustomplot
  - qmake qcustomplot.pro
  - make -j2
  - ls
  - cd ../../
  # build triangle library
  - cd ext/triangle
  - make -j2
  - cd ../../
  # download pre-compiled static libSBML (and other) libraries
  - cd ext
  - wget "https://github.com/lkeegan/libsbml-static/releases/latest/download/libsbml-static-$TRAVIS_OS_NAME.tgz"
  - tar xzvf libsbml-static-$TRAVIS_OS_NAME.tgz
  - ls */*
  - cd ..

notifications:
  email: false
deploy:
  # if build is tagged, upload executables to github release
  provider: releases
  api_key:
    secure: E0WtptZea2n40eN+FBYZ2XYv/pjKUjVFZavl8BTVYhidzXYuT/DvhoehPVauJRy/t5QLMtmyd5ww9dhYkIcNcpAc1INrUlYG274D8xgXwbgsftmFbMqdrKR9f/qkynP0r6LCd1p0Tuhxxf37OcTYVEOjbvV+KsTzpWHtS9AqZGvMfv/rpI4r/Zu/LfGBs2T7Rr8Mlfy5YBI2L7lGka3ziTIic01pKDfjHJQ2xD2N366mEqcpB0vjF8c9b+qIUbQ8g8ybLoMfKM6ZSvcpz2NmLQK8l8gzzTN/k1PI2DJxmzi+9G031RXLAXvbR8I8NEQlZfsicepHk0m13EI7x5/TIGaa2ngSgX1W7oAL0IAkJFpcWcN5RQOgowCBAB/UnHCX8EgnBAiD8eTlc4DUC2WY84Dr3EcdhLg0bEX/Ky4mDAxt0QgABG0hEU3kE6USsUvp7IZmnCEdu8e+F/HRmvSUqECI9FvjmpHdBHwIv6anVA2pndN/ZGn4+4BWbo6IwycAh0FPAnvvs6guxnOqQW/eMRgBI3y4grzEYP/bPzlL1W6q42r6fwvh45LtcgC+joAoJCL3I51QcZ1joMY/OShSaKi3MnokImmb/GPRvebe3hDGGSsEAarrmIRb0zCMYDMdHzA+pqeojGZf6SCfIculmeE1MO2t/DqumxQRxTGx+8k=
  file: $DEPLOY_FILE
  skip_cleanup: true
  on:
    repo: lkeegan/spatial-model-editor
    overwrite: true
    tags: true
    all_branches: true
    condition: $DEPLOY_FILE != ""
